# Generated by Django 3.2.8 on 2021-10-20 04:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import sellerapp.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('fname', models.CharField(max_length=150)),
                ('lname', models.CharField(max_length=150)),
                ('phone', models.CharField(max_length=50)),
                ('date_of_birth', models.DateTimeField(blank=True, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', sellerapp.models.AccountManager()),
            ],
        ),
        migrations.CreateModel(
            name='MainCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='Maincategory')),
                ('info', models.CharField(max_length=200)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SubCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='Subcategory')),
                ('info', models.CharField(max_length=200)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StoreModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storecategory', models.CharField(choices=[('Electronics', 'Electronics'), ('Grocery', 'Grocery'), ('Cloths', 'Cloths')], max_length=200)),
                ('storelogo', models.ImageField(blank=True, null=True, upload_to='Storelogo')),
                ('storename', models.CharField(max_length=200)),
                ('gstinno', models.CharField(max_length=200)),
                ('panno', models.CharField(max_length=200)),
                ('shopaddress', models.TextField()),
                ('signature', models.ImageField(upload_to='Storedetail')),
                ('status', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('og_price', models.IntegerField(default=0)),
                ('discount', models.IntegerField(default=0)),
                ('discountedprice', models.IntegerField(default=0)),
                ('sell_price', models.IntegerField(default=0)),
                ('image', models.ImageField(upload_to='Product')),
                ('image1', models.ImageField(blank=True, null=True, upload_to='Product')),
                ('image2', models.ImageField(blank=True, null=True, upload_to='Product')),
                ('image3', models.ImageField(blank=True, null=True, upload_to='Product')),
                ('image4', models.ImageField(blank=True, null=True, upload_to='Product')),
                ('info', models.CharField(max_length=200)),
                ('status', models.CharField(choices=[('Frash Arrival', 'Frash Arrival'), ('Trending', 'Trending'), ('Out of Stock', 'Out of Stock')], default='Frash Arrival', max_length=200)),
                ('maincate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sellerapp.maincategorymodel')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sellerapp.storemodel')),
                ('subcate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sellerapp.subcategorymodel')),
            ],
        ),
    ]
